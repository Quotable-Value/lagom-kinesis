play.crypto.secret = 9cec21cbec8ba9c8c4b00cf3e8acd33e246818ce # A value is required by Play framework.
play.application.loader = com.contxt.example.impl.ExampleLoader

#//#kinesis-broker
lagom.broker.kinesis {
  # The URL of the Kinesis end point.
  # This will be ignored if the service-name configuration is non empty.
  kinesis-endpoint = "http://localhost:4567/"
  kinesis-service-name = ""
  dynamodb-endpoint = "http://localhost:8001/"
  dynamodb-service-name = ""

  kinesis-signing-region = ""

  is-secure = false

  client {
    default {
      # Exponential backoff for failures
      failure-exponential-backoff {
        # minimum (initial) duration until processor is started again
        # after failure
        min = 3s

        # the exponential back-off is capped to this duration
        max = 30s

        # additional random delay is based on this factor
        random-factor = 0.2
      }
      region-name = "Toronto"
    }

    # configuration used by the Lagom Kinesis producer
    producer = ${lagom.broker.kinesis.client.default}
    producer.role = ""
    producer.region-name = "us-east-1"
    producer.aws-access-key = "x"
    producer.aws-secret-key = "x"
    producer.initial-position-in-streamaws-secret-key = "x"

    # configuration used by the Lagom Kinesis consumer
    consumer {
      failure-exponential-backoff = ${lagom.broker.kinesis.client.default.failure-exponential-backoff}
      batching-size = 10
      max-buffer-size = 10
      max-batch-size = 10
      batching-interval = 5 seconds
      long-polling-duration = 5 seconds
      region-name = "us-east-1"
      aws-access-key = "x"
      aws-secret-key = "x"
      initial-position-in-stream="LATEST"
      metrics-level = ""
    }
  }
}
#//#kinesis-broker
